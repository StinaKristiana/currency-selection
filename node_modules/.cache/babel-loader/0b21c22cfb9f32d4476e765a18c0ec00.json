{"ast":null,"code":"import _slicedToArray from \"/home/codelex/currency-selection/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/codelex/currency-selection/src/App.tsx\";\nimport React, { useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\n\nconst App = () => {\n  const currencies = [\"EUR\", \"PLN\", \"GEL\", \"DKK\", \"CZK\", \"GBP\", \"SEK\", \"USD\", \"RUB\"];\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedCurrencies = _useState2[0],\n        setSelectedCurrencies = _useState2[1];\n\n  const addCurrency = rate => {\n    if (selectedCurrencies === undefined) {\n      const addNewCurrency = [rate];\n      setSelectedCurrencies(addNewCurrency);\n    } else {\n      if (selectedCurrencies.includes(rate)) {\n        removeCurrency(rate);\n      } else {\n        const addNewCurrency = [...selectedCurrencies, rate];\n        setSelectedCurrencies(addNewCurrency);\n      }\n    }\n  };\n\n  const removeCurrency = rate => {\n    const index = selectedCurrencies.indexOf(rate);\n    const removeNewCurrency = [...selectedCurrencies];\n    removeNewCurrency.splice(index, 1);\n    setSelectedCurrencies(removeNewCurrency);\n  };\n\n  const checkSelected = rate => {\n    if (selectedCurrencies === undefined) {\n      return false;\n    } else {\n      return selectedCurrencies.includes(rate);\n    }\n  };\n\n  return React.createElement(Row, {\n    className: \"full-screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 8,\n    md: 6,\n    lg: 4,\n    className: \"main-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"selected-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, selectedCurrencies === undefined ? React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }) : selectedCurrencies.map(rate => React.createElement(Col, {\n    xs: 3,\n    key: currencies.indexOf(rate),\n    className: \"column-style\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"currency-container-selected\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, rate), React.createElement(\"a\", {\n    className: \"boxclose\",\n    onClick: () => removeCurrency(rate),\n    href: \"/#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \" \"))))), React.createElement(Row, {\n    className: \"currency-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, currencies.map(rate => React.createElement(Col, {\n    xs: 3,\n    key: rate,\n    className: \"column-style\",\n    onInput: () => addCurrency(rate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: checkSelected(rate) ? \"currency-container-active\" : \"currency-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: checkSelected(rate),\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, rate)))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/codelex/currency-selection/src/App.tsx"],"names":["React","useState","Row","Col","App","currencies","selectedCurrencies","setSelectedCurrencies","addCurrency","rate","undefined","addNewCurrency","includes","removeCurrency","index","indexOf","removeNewCurrency","splice","checkSelected","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\n\nconst App: React.FC = () => {\n  const currencies = [\n    \"EUR\",\n    \"PLN\",\n    \"GEL\",\n    \"DKK\",\n    \"CZK\",\n    \"GBP\",\n    \"SEK\",\n    \"USD\",\n    \"RUB\"\n  ];\n  const [selectedCurrencies, setSelectedCurrencies] = useState();\n\n  const addCurrency = (rate: string) => {\n    if (selectedCurrencies === undefined) {\n      const addNewCurrency: string[] = [rate];\n      setSelectedCurrencies(addNewCurrency);\n    } else {\n      if (selectedCurrencies.includes(rate)) {\n        removeCurrency(rate);\n      } else {\n        const addNewCurrency: string[] = [...selectedCurrencies, rate];\n        setSelectedCurrencies(addNewCurrency);\n      }\n    }\n  };\n\n  const removeCurrency = (rate: string) => {\n    const index = selectedCurrencies.indexOf(rate);\n    const removeNewCurrency = [...selectedCurrencies];\n    removeNewCurrency.splice(index, 1);\n    setSelectedCurrencies(removeNewCurrency);\n  };\n\n  const checkSelected = (rate: string): boolean => {\n    if (selectedCurrencies === undefined) {\n      return false;\n    } else {\n      return selectedCurrencies.includes(rate);\n    }\n  };\n\n  return (\n    <Row className=\"full-screen\">\n      <Col xs={8} md={6} lg={4} className=\"main-box\">\n        <Row className=\"selected-box\">\n          {selectedCurrencies === undefined ? (\n            <Row />\n          ) : (\n            selectedCurrencies.map((rate: string) => (\n              <Col\n                xs={3}\n                key={currencies.indexOf(rate)}\n                className=\"column-style\"\n              >\n                <label className=\"currency-container-selected\">\n                  <span className=\"\">{rate}</span>\n                  <a\n                    className=\"boxclose\"\n                    onClick={() => removeCurrency(rate)}\n                    href=\"/#\"\n                  >\n                    {\" \"}\n                  </a>\n                </label>\n              </Col>\n            ))\n          )}\n        </Row>\n\n        <Row className=\"currency-box\">\n          {currencies.map((rate: string) => (\n            <Col\n              xs={3}\n              key={rate}\n              className=\"column-style\"\n              onInput={() => addCurrency(rate)}\n            >\n              <label\n                className={\n                  checkSelected(rate)\n                    ? \"currency-container-active\"\n                    : \"currency-container\"\n                }\n              >\n                <input type=\"checkbox\" checked={checkSelected(rate)} readOnly />\n                <span>{rate}</span>\n              </label>\n            </Col>\n          ))}\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}