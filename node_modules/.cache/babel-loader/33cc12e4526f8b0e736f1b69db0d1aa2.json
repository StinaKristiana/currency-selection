{"ast":null,"code":"import _slicedToArray from \"/home/codelex/MintosHomework/currency/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/codelex/MintosHomework/currency/src/App.tsx\";\nimport React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nconst App = () => {\n  const currencies = ['EUR', 'PLN', 'GEL', 'DKK', 'CZK', 'GBP', 'SEK', 'USD', 'RUB'];\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedCurrencies = _useState2[0],\n        setSelectedCurrencies = _useState2[1];\n\n  const addCurrency = rate => {\n    if (selectedCurrencies === undefined) {\n      const addNewCurrency = [rate];\n      setSelectedCurrencies(addNewCurrency);\n    } else {\n      if (selectedCurrencies.includes(rate)) {\n        removeCurrency(rate);\n      } else {\n        const addNewCurrency = [...selectedCurrencies, rate];\n        setSelectedCurrencies(addNewCurrency);\n      }\n    }\n  };\n\n  const removeCurrency = rate => {\n    const index = selectedCurrencies.indexOf(rate);\n    const removeNewCurrency = [...selectedCurrencies];\n    removeNewCurrency.splice(index, 1);\n    setSelectedCurrencies(removeNewCurrency);\n  };\n\n  const checkSelected = rate => {\n    console.log(selectedCurrencies === undefined);\n    return false;\n  };\n\n  return React.createElement(Row, {\n    className: \"full-screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 8,\n    md: 6,\n    lg: 4,\n    className: \"main-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, console.log(selectedCurrencies === undefined), selectedCurrencies === undefined ? React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : selectedCurrencies.map(rate => React.createElement(Col, {\n    xs: 3,\n    key: currencies.indexOf(rate),\n    className: \"rate-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"container-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, rate), React.createElement(\"a\", {\n    className: \"boxclose\",\n    onClick: () => removeCurrency(rate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))))), React.createElement(Row, {\n    className: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, currencies.map(rate => React.createElement(Col, {\n    xs: 3,\n    key: rate,\n    className: \"rate-box\",\n    onInput: () => addCurrency(rate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"currency-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: checkSelected(rate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, rate)))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/codelex/MintosHomework/currency/src/App.tsx"],"names":["React","useState","Row","Col","App","currencies","selectedCurrencies","setSelectedCurrencies","addCurrency","rate","undefined","addNewCurrency","includes","removeCurrency","index","indexOf","removeNewCurrency","splice","checkSelected","console","log","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nconst App: React.FC = () => {\n\tconst currencies = [ 'EUR', 'PLN', 'GEL', 'DKK', 'CZK', 'GBP', 'SEK', 'USD', 'RUB' ];\n\tconst [ selectedCurrencies, setSelectedCurrencies ] = useState();\n\n\tconst addCurrency = (rate: string) => {\n\t\tif (selectedCurrencies === undefined) {\n\t\t\tconst addNewCurrency: string[] = [ rate ];\n\t\t\tsetSelectedCurrencies(addNewCurrency);\n\t\t} else {\n\t\t\tif (selectedCurrencies.includes(rate)) {\n\t\t\t\tremoveCurrency(rate);\n\t\t\t} else {\n\t\t\t\tconst addNewCurrency: string[] = [ ...selectedCurrencies, rate ];\n\t\t\t\tsetSelectedCurrencies(addNewCurrency);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst removeCurrency = (rate: string) => {\n\t\tconst index = selectedCurrencies.indexOf(rate);\n\t\tconst removeNewCurrency = [ ...selectedCurrencies ];\n\t\tremoveNewCurrency.splice(index, 1);\n\t\tsetSelectedCurrencies(removeNewCurrency);\n\t};\n\n\tconst checkSelected = (rate: string):boolean => {\n\n\t\tconsole.log(selectedCurrencies===undefined);\n\n\t\treturn false\n\t};\n\n\n\treturn (\n\t\t<Row className=\"full-screen\">\n\t\t\t<Col xs={8} md={6} lg={4} className=\"main-box\">\n\t\t\t\t<Row className=\"blue\">\n\t\t\t\t\t{console.log(selectedCurrencies === undefined)}\n\t\t\t\t\t{selectedCurrencies === undefined ? (\n\t\t\t\t\t\t<Row />\n\t\t\t\t\t) : (\n\t\t\t\t\t\tselectedCurrencies.map((rate: string) => (\n\t\t\t\t\t\t\t<Col xs={3} key={currencies.indexOf(rate)} className=\"rate-box\">\n\t\t\t\t\t\t\t\t<label className=\"container-up\">\n\t\t\t\t\t\t\t\t\t<span className=\"\">{rate}</span>\n\t\t\t\t\t\t\t\t\t<a className=\"boxclose\" onClick={() => removeCurrency(rate)} />\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t))\n\t\t\t\t\t)}\n\t\t\t\t</Row>\n\n\t\t\t\t<Row className=\"red\">\n\t\t\t\t\t{currencies.map((rate: string) => (\n\t\t\t\t\t\t<Col xs={3} key={rate} className=\"rate-box\" onInput={() => addCurrency(rate)}>\n\t\t\t\t\t\t\t<label className=\"currency-container\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" checked={checkSelected(rate)} />\n\t\t\t\t\t\t\t\t<span>{rate}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t))}\n\t\t\t\t</Row>\n\t\t\t</Col>\n\t\t</Row>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}